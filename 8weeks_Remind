데이터 분석 이란
-----
-알고리즘,수학적 지식을 적용해 데이터에 대한 인사이트를 도출하는 것

데이터 분석과정
----
### 1.탐색적 데이터 분석 (Exploratory Data Anlysls)

     현재 문제상황 정의
     시각화,변수탐색
     결측치와 이상치 탐지
     
### 2. 데이터 전처리(Data preprocessing)

    문제해결을 위한 적적한 데이터 처리
    정형화된 형태로 데이터를 변화시킴
    
### 3. Feathre Engine
    
    변수의 추가,축소
    특징 추출
    
### 4. 모델링(modeling)

    정형화된 데이터로
    데이터를 통해 예측,분류,결과해석
    
### 데이터 자체가 분석에서 가장 중요  

    Data preprocessing과정에 대부분 시간 소요
    
관련 모듈
---
    
### 1. pandas 모듈
    - 데이터를 사용하기 편한 상태로 만든다
    
    #모둘 임포트
    import pandas as pd
    
    #Series(숫자 인뎃스와 key인덱스로 데이터를 찾는 것이 가능)
    pd.Series()
 
    #DataFrame(행렬로 이루어진 데이터 집합)
    pd.DataFrame()
    
    #Series,dictionary 값을 DataFrame의 특정 컬럼에 넣을 때 {['컬럼이름']:딕셔너리 or 시리즈 정보를 담은 변수} 형태로 저장
    
    # csv 파일 DataFrame 형태로 저장
    pd.read_csv("파일 이름")
    
    # xlsx 파일 DataFrame 형태로 저장
    pd.read_excel("파일 이름")
    
    #신규컬럼에 데이터 삽입 
    DataFrame['컬럼이름']=데이터를 담은 변수
    
    #컬럼이 가진 값에 따라 데이터를 분류하기  
    DataFrame[( DataFrame['modelYear(컬럼명)'] > 기준이 될 값) & ( DataFrame[' DataFrame(컬럼명)'] < 기준이 될 값)]
    
    #특정 컬럼지정
    DataFrame['컬럼명']
    
    #데이터 프레임 전치 행렬화
    new_df1=DataFrame.transpose()
    
    # "-" 결측치를 0으로 대체
    new_df2=DataFrame.replace("-",0)
    
    #필요없는 컬럼 제거
    new_df3=DataFrame.drop(['제거할 컬럼명(,로 여러개 가능)'],axis=1)
    
    #기술통계량 산출
    Dataframe.describe(include="all") 
    
    # 컬럼별 데이터 개수,데이터 타입 산출
    Dataframe.info()
    
    #데이터 상위 5개  출력
    Dataframe.head()
    
    #데이터 하위 5개  출력
    Dataframe.tail() 
    
    # 컬럼의 값별로 나온 횟수 세기
    DataFrame['컬럼명'].value_counts()
    
    # 각 컬럼별 결측치 검색
    DataFrame.isnull().sum()
   
     
 ### 2. Matplotlib
   - 기본적인 시각화 도구
     
    '데이터 분석 이란
-----
-알고리즘,수학적 지식을 적용해 데이터에 대한 인사이트를 도출하는 것

데이터 분석과정
----
### 1.탐색적 데이터 분석 (Exploratory Data Anlysls)

     현재 문제상황 정의
     시각화,변수탐색
     결측치와 이상치 탐지
     
### 2. 데이터 전처리(Data preprocessing)

    문제해결을 위한 적적한 데이터 처리
    정형화된 형태로 데이터를 변화시킴
    
### 3. Feathre Engine
    
    변수의 추가,축소
    특징 추출
    
### 4. 모델링(modeling)

    정형화된 데이터로
    데이터를 통해 예측,분류,결과해석
    
### 데이터 자체가 분석에서 가장 중요  

    Data preprocessing과정에 대부분 시간 소요
    
관련 모듈
---
    
### 1. pandas 모듈
    - 데이터를 사용하기 편한 상태로 만든다
    
    #모둘 임포트
    import pandas as pd
    
    #Series(숫자 인뎃스와 key인덱스로 데이터를 찾는 것이 가능)
    pd.Series()
 
    #DataFrame(행렬로 이루어진 데이터 집합)
    pd.DataFrame()
    
    #Series,dictionary 값을 DataFrame의 특정 컬럼에 넣을 때 {['컬럼이름']:딕셔너리 or 시리즈 정보를 담은 변수} 형태로 저장
    
    # csv 파일 DataFrame 형태로 저장
    pd.read_csv("파일 이름")
    
    # xlsx 파일 DataFrame 형태로 저장
    pd.read_excel("파일 이름")
    
    #신규컬럼에 데이터 삽입 
    DataFrame['컬럼이름']=데이터를 담은 변수
    
    #컬럼이 가진 값에 따라 데이터를 분류하기  
    DataFrame[( DataFrame['modelYear(컬럼명)'] > 기준이 될 값) & ( DataFrame[' DataFrame(컬럼명)'] < 기준이 될 값)]
    
    #특정 컬럼지정
    DataFrame['컬럼명']
    
    #데이터 프레임 전치 행렬화
    new_df1=DataFrame.transpose()
    
    # "-" 결측치를 0으로 대체
    new_df2=DataFrame.replace("-",0)
    
    #필요없는 컬럼 제거
    new_df3=DataFrame.drop(['제거할 컬럼명(,로 여러개 가능)'],axis=1)
    
    #기술통계량 산출
    Dataframe.describe(include="all") 
    
    # 컬럼별 데이터 개수,데이터 타입 산출
    Dataframe.info()
    
    #데이터 상위 5개  출력
    Dataframe.head()
    
    #데이터 하위 5개  출력
    Dataframe.tail() 
    
    # 컬럼의 값별로 나온 횟수 세기
    DataFrame['컬럼명'].value_counts()
    
    # 각 컬럼별 결측치 검색
    DataFrame.isnull().sum()
   
     
 ### 2. Matplotlib
   - 기본적인 시각화 도구
     
    
